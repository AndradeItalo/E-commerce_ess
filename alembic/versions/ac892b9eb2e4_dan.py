"""dan

Revision ID: ac892b9eb2e4
Revises: 
Create Date: 2023-08-16 22:24:50.363456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac892b9eb2e4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('loja',
    sa.Column('cnpj', sa.String(length=14), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('senha', sa.String(length=50), nullable=True),
    sa.Column('nome', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('cnpj')
    )
    op.create_table('status',
    sa.Column('id_status', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id_status')
    )
    op.create_table('usuario',
    sa.Column('cpf', sa.String(length=11), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('senha', sa.String(length=50), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('cpf')
    )
    op.create_table('endereco',
    sa.Column('cep', sa.String(length=8), nullable=False),
    sa.Column('rua', sa.String(length=50), nullable=True),
    sa.Column('numero', sa.Integer(), nullable=False),
    sa.Column('complemento', sa.String(length=50), nullable=False),
    sa.Column('cidade', sa.String(length=50), nullable=True),
    sa.Column('estado', sa.String(length=50), nullable=True),
    sa.Column('cpf_usuario', sa.String(length=11), nullable=True),
    sa.ForeignKeyConstraint(['cpf_usuario'], ['usuario.cpf'], ),
    sa.PrimaryKeyConstraint('cep', 'numero', 'complemento')
    )
    op.create_table('pedido',
    sa.Column('id_pedido', sa.Integer(), nullable=False),
    sa.Column('cpf_usuario', sa.String(length=11), nullable=True),
    sa.Column('preco_total', sa.Float(), nullable=True),
    sa.Column('pedido_status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cpf_usuario'], ['usuario.cpf'], ),
    sa.ForeignKeyConstraint(['pedido_status'], ['status.id_status'], ),
    sa.PrimaryKeyConstraint('id_pedido')
    )
    op.create_table('produto',
    sa.Column('id_produto', sa.Integer(), nullable=False),
    sa.Column('cnpj_loja', sa.String(length=14), nullable=True),
    sa.Column('categoria_prod', sa.String(length=50), nullable=True),
    sa.Column('nome_produto', sa.String(length=50), nullable=True),
    sa.Column('marca_produto', sa.String(length=50), nullable=True),
    sa.Column('preco', sa.String(length=50), nullable=True),
    sa.Column('especificacoes', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['cnpj_loja'], ['loja.cnpj'], ),
    sa.PrimaryKeyConstraint('id_produto')
    )
    op.create_table('telefone',
    sa.Column('cpf_usuario', sa.String(length=11), nullable=True),
    sa.Column('numero', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['cpf_usuario'], ['usuario.cpf'], ),
    sa.PrimaryKeyConstraint('numero')
    )
    op.create_table('estoque',
    sa.Column('id_estoque', sa.Integer(), nullable=False),
    sa.Column('id_produto', sa.Integer(), nullable=True),
    sa.Column('id_loja', sa.String(length=14), nullable=True),
    sa.Column('quantidade', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_loja'], ['loja.cnpj'], ),
    sa.ForeignKeyConstraint(['id_produto'], ['produto.id_produto'], ),
    sa.PrimaryKeyConstraint('id_estoque')
    )
    op.create_table('item',
    sa.Column('id_item', sa.Integer(), nullable=False),
    sa.Column('id_produto', sa.Integer(), nullable=True),
    sa.Column('id_pedido', sa.Integer(), nullable=True),
    sa.Column('quantidade', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_pedido'], ['pedido.id_pedido'], ),
    sa.ForeignKeyConstraint(['id_produto'], ['produto.id_produto'], ),
    sa.PrimaryKeyConstraint('id_item')
    )
    op.drop_table('transactions')
    op.drop_table('_prisma_migrations')
    op.drop_table('pedidos')
    op.drop_table('usuarios')
    op.drop_table('Users')
    op.drop_table('enderecos')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enderecos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('enderecos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('rua', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('numero', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('complemento', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cidade', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cep', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='enderecos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Users',
    sa.Column('Name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Password', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Email', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Date', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Number', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('Cpf', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('Cpf', name='Users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usuarios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nomecompleto', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('data_atualizacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('endereco_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['endereco_id'], ['enderecos.id'], name='usuarios_endereco_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pedidos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('data_pedido', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('valor_total', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='pedidos_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pedidos_pkey')
    )
    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='_prisma_migrations_pkey')
    )
    op.create_table('transactions',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Users.Cpf'], name='transactions_id_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.drop_table('item')
    op.drop_table('estoque')
    op.drop_table('telefone')
    op.drop_table('produto')
    op.drop_table('pedido')
    op.drop_table('endereco')
    op.drop_table('usuario')
    op.drop_table('status')
    op.drop_table('loja')
    # ### end Alembic commands ###
